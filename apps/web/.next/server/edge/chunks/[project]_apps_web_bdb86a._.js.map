{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/instrumentation.ts"],"sourcesContent":["import { Configuration, registerOTel } from '@vercel/otel'\n\nexport async function register() {\n  // const config: Configuration = {\n  //   serviceName: 'plutus',\n  //   traceExporter: new OTLPTraceExporter({\n  //     url: 'http://localhost:4318/v1/traces',\n  //   }),\n  //   instrumentationConfig: {\n  //     fetch: {\n  //       ignoreUrls: [/^https:\\/\\/telemetry.nextjs.org/],\n  //       propagateContextUrls: [/^http:\\/\\/localhost:\\d+/],\n  //       dontPropagateContextUrls: [/no-propagation\\=1/],\n  //     },\n  //   },\n  // }\n  //\n  // registerOTel(config)\n\n  // if (process.env.NEXT_RUNTIME === 'nodejs') {\n  //   const { BaselimeSDK, VercelPlugin, BetterHttpInstrumentation } =\n  //     await import('@baselime/node-opentelemetry')\n  //\n  //   const sdk = new BaselimeSDK({\n  //     serverless: true,\n  //     service: 'plutus',\n  //     instrumentations: [\n  //       new BetterHttpInstrumentation({\n  //         plugins: [\n  //           // Add the Vercel plugin to enable correlation between your logs and traces for projects deployed on Vercel\n  //           new VercelPlugin(),\n  //         ],\n  //       }),\n  //     ],\n  //   })\n  //\n  //   sdk.start()\n\n  const config: Configuration = {\n    serviceName: 'plutus',\n    instrumentationConfig: {\n      fetch: {\n        ignoreUrls: [/^https:\\/\\/telemetry.nextjs.org/],\n        propagateContextUrls: [/^http:\\/\\/localhost:\\d+/],\n        dontPropagateContextUrls: [/no-propagation\\=1/],\n      },\n    },\n  }\n\n  registerOTel(config)\n}\n"],"names":[],"mappings":";;;;;;AAEO,eAAe;IACpB,kCAAkC;IAClC,2BAA2B;IAC3B,2CAA2C;IAC3C,8CAA8C;IAC9C,QAAQ;IACR,6BAA6B;IAC7B,eAAe;IACf,yDAAyD;IACzD,2DAA2D;IAC3D,yDAAyD;IACzD,SAAS;IACT,OAAO;IACP,IAAI;IACJ,EAAE;IACF,uBAAuB;IAEvB,+CAA+C;IAC/C,qEAAqE;IACrE,mDAAmD;IACnD,EAAE;IACF,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;IACzB,0BAA0B;IAC1B,wCAAwC;IACxC,qBAAqB;IACrB,wHAAwH;IACxH,gCAAgC;IAChC,aAAa;IACb,YAAY;IACZ,SAAS;IACT,OAAO;IACP,EAAE;IACF,gBAAgB;IAEhB,MAAM,SAAwB;QAC5B,aAAa;QACb,uBAAuB;YACrB,OAAO;gBACL,YAAY;oBAAC;iBAAkC;gBAC/C,sBAAsB;oBAAC;iBAA0B;gBACjD,0BAA0B;oBAAC;iBAAoB;YACjD;QACF;IACF;IAEA,CAAA,GAAA,mWAAA,CAAA,eAAY,AAAD,EAAE;AACf"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/edge-wrapper.js"],"sourcesContent":["self._ENTRIES ||= {}\nself._ENTRIES[\"middleware_instrumentation\"] = import('MODULE')\n"],"names":[],"mappings":"AAAA,KAAK,QAAQ,KAAK,CAAC;AACnB,KAAK,QAAQ,CAAC,6BAA6B"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}