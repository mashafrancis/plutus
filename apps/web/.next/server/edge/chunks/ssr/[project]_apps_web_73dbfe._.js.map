{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/env.mjs"],"sourcesContent":["import { createEnv } from '@t3-oss/env-nextjs'\nimport { z } from 'zod'\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    NODE_ENV: z.enum(['development', 'test', 'production']),\n    // PRISMA_FIELD_ENCRYPTION_KEY: z.string().min(1),\n    RESEND_API_KEY: z.string().min(1),\n    SUPABASE_SERVICE_ROLE_KEY: z.string().min(1),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    NEXT_PUBLIC_SUPABASE_URL: z.string().min(1),\n    NEXT_PUBLIC_SUPABASE_ANON_KEY: z.string().min(1),\n    NEXT_PUBLIC_HEIMDALL_API: z.string().min(1),\n    NEXT_PUBLIC_BASELIME_KEY: z.string().min(1),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    NODE_ENV: process.env.NODE_ENV,\n    // PRISMA_FIELD_ENCRYPTION_KEY: process.env.PRISMA_FIELD_ENCRYPTION_KEY,\n    NEXT_PUBLIC_SUPABASE_URL: process.env.NEXT_PUBLIC_SUPABASE_URL,\n    NEXT_PUBLIC_SUPABASE_ANON_KEY: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    RESEND_API_KEY: process.env.RESEND_API_KEY,\n    SUPABASE_SERVICE_ROLE_KEY: process.env.SUPABASE_SERVICE_ROLE_KEY,\n    NEXT_PUBLIC_HEIMDALL_API: process.env.NEXT_PUBLIC_HEIMDALL_API,\n    NEXT_PUBLIC_BASELIME_KEY: process.env.NEXT_PUBLIC_BASELIME_KEY,\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,MAAM,CAAA,GAAA,qRAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,UAAU,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa;QACtD,kDAAkD;QAClD,gBAAgB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC/B,2BAA2B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC5C;IAEA;;;;GAIC,GACD,QAAQ;QACN,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACzC,+BAA+B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC9C,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACzC,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC3C;IAEA;;;GAGC,GACD,YAAY;QACV,QAAQ;QACR,wEAAwE;QACxE,wBAAwB;QACxB,6BAA6B;QAC7B,gBAAgB,QAAQ,GAAG,CAAC,cAAc;QAC1C,2BAA2B,QAAQ,GAAG,CAAC,yBAAyB;QAChE,wBAAwB;QACxB,wBAAwB;IAC1B;AACF"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/lib/supabase/middleware.ts"],"sourcesContent":["import { env } from '@/env.mjs'\nimport { type CookieOptions, createServerClient } from '@supabase/ssr'\nimport { type NextRequest, NextResponse } from 'next/server'\n\nexport async function updateSession(request: NextRequest) {\n  let response = NextResponse.next({\n    request: {\n      headers: request.headers,\n    },\n  })\n\n  const supabase = createServerClient(\n    env.NEXT_PUBLIC_SUPABASE_URL,\n    env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        get(name: string) {\n          return request.cookies.get(name)?.value\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          request.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n        },\n        remove(name: string, options: CookieOptions) {\n          request.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n        },\n      },\n    },\n  )\n\n  await supabase.auth.getUser()\n\n  return response\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAIO,eAAe,cAAc,OAAoB;IACtD,IAAI,WAAW,8YAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;YACP,SAAS,QAAQ,OAAO;QAC1B;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,gRAAA,CAAA,qBAAkB,AAAD,EAChC,mHAAA,CAAA,MAAG,CAAC,wBAAwB,EAC5B,mHAAA,CAAA,MAAG,CAAC,6BAA6B,EACjC;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO;YACpC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA;oBACA,GAAG,OAAO;gBACZ;gBACA,WAAW,8YAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA;oBACA,GAAG,OAAO;gBACZ;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;gBACA,WAAW,8YAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;YACF;QACF;IACF;IAGF,MAAM,SAAS,IAAI,CAAC,OAAO;IAE3B,OAAO;AACT"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/middleware.ts"],"sourcesContent":["import { updateSession } from '@/lib/supabase/middleware'\nimport { type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  return await updateSession(request)\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * Feel free to modify this pattern to include more paths.\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n}\n"],"names":[],"mappings":";;;;;;;AAGO,eAAe,WAAW,OAAoB;IACnD,OAAO,MAAM,CAAA,GAAA,4IAAA,CAAA,gBAAa,AAAD,EAAE;AAC7B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}