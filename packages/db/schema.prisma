generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

generator fieldEncryptionMigrations {
  provider = "prisma-field-encryption"
  output   = "./migrations"
}

datasource db {
  provider = "sqlite"
  url      = "file:./plutus-dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model subscriptions {
  id           String   @id @default(cuid())
  /// @encrypted
  name         String
  /// @encrypted
  notes        String?
  url          String
  /// @encrypted
  price        String   @default("0")
  paid         String
  notify       Boolean  @default(false)
  date         String
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
  user_id      String
  active       Boolean? @default(true)
  cancelled_at String?
  nameHash     String?
  user         users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model expenses {
  id         String   @id @default(cuid())
  /// @encrypted
  name       String
  /// @encrypted
  notes      String?
  /// @encrypted
  price      String   @default("0")
  paid_via   String   @default("")
  category   String
  date       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user_id    String
  nameHash   String?
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model income {
  id         String   @id @default(cuid())
  /// @encrypted
  name       String
  /// @encrypted
  notes      String?
  /// @encrypted
  price      String   @default("0")
  category   String
  date       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user_id    String
  nameHash   String?
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model investments {
  id         String   @id @default(cuid())
  /// @encrypted
  name       String
  /// @encrypted
  notes      String?
  /// @encrypted
  price      String   @default("0")
  /// @encrypted
  units      String   @default("0")
  category   String
  date       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user_id    String
  nameHash   String?
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model users {
  id                         String          @id @default(cuid())
  email                      String
  created_at                 DateTime        @default(now())
  updated_at                 DateTime        @default(now()) @updatedAt
  currency                   String          @default("KES")
  locale                     String          @default("en-KE")
  order_identifier           String?
  order_store_id             String?
  order_number               String?
  order_status               String?
  billing_start_date         String?
  plan_status                String          @default("basic")
  trial_start_date           DateTime        @default(now())
  usage                      Int             @default(0)
  basic_usage_limit_email    Boolean         @default(false)
  new_signup_email           Boolean         @default(false)
  premium_plan_expired_email Boolean         @default(false)
  premium_usage_limit_email  Boolean         @default(false)
  monthly_email_report       Boolean         @default(false)
  expenses                   expenses[]
  income                     income[]
  investments                investments[]
  subscriptions              subscriptions[]
}

model feedback {
  id         Int      @id @default(autoincrement())
  message    String
  user_id    String
  created_at DateTime @default(now())
}

model contact {
  id         Int      @id @default(autoincrement())
  message    String
  subject    String
  email      String
  created_at DateTime @default(now())
}
